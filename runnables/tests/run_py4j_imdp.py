from py4j.java_gateway import JavaGateway

if __name__ == '__main__':
    """Replicates the example in prism IMDPModelChecker"""
    gateway = JavaGateway(auto_field=True)
    mc = gateway.jvm.explicit.IMDPModelChecker(None)
    mdp = gateway.entry_point.reset_mdp()
    eval = gateway.jvm.prism.Evaluator.createForDoubleIntervals()
    mdp.setEvaluator(eval)
    mdp.addState()
    mdp.addState()
    mdp.addState()
    dist = gateway.jvm.explicit.Distribution(eval)
    dist.add(1, gateway.jvm.common.Interval(0.2, 0.4))
    dist.add(2, gateway.jvm.common.Interval(0.6, 0.8))
    mdp.addActionLabelledChoice(0, dist, "a")
    dist = gateway.jvm.explicit.Distribution(eval)
    dist.add(1, gateway.jvm.common.Interval(0.1, 0.3))
    dist.add(2, gateway.jvm.common.Interval(0.7, 0.9))
    mdp.addActionLabelledChoice(0, dist, "b")
    mdp.findDeadlocks(True)
    mdp.exportToDotFile("imdppy.dot")
    target = gateway.jvm.java.util.BitSet()
    target.set(2)
    res = mc.computeReachProbs(mdp, target, gateway.jvm.explicit.MinMax.min().setMinUnc(True))
    print(f"minmin: {res.soln[0]}")
    res = mc.computeReachProbs(mdp, target, gateway.jvm.explicit.MinMax.min().setMinUnc(False))
    print(f"minmax: {res.soln[0]}")
    res = mc.computeReachProbs(mdp, target, gateway.jvm.explicit.MinMax.max().setMinUnc(True))
    print(f"maxmin: {res.soln[0]}")
    res = mc.computeReachProbs(mdp, target, gateway.jvm.explicit.MinMax.max().setMinUnc(False))
    print(f"maxmax: {res.soln[0]}")
